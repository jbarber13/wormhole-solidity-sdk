/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface QueryRequestBuilderInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "SOLANA_MAX_SEEDS"
      | "SOLANA_MAX_SEED_LEN"
      | "buildEthCallByTimestampRequestBytes"
      | "buildEthCallByTimestampResponseBytes"
      | "buildEthCallRecordBytes"
      | "buildEthCallRequestBytes"
      | "buildEthCallResponseBytes"
      | "buildEthCallResultBytes"
      | "buildEthCallWithFinalityRequestBytes"
      | "buildEthCallWithFinalityResponseBytes"
      | "buildOffChainQueryRequestBytes"
      | "buildPerChainRequestBytes"
      | "buildPerChainResponseBytes"
      | "buildQueryResponseBytes"
      | "buildSolanaAccountRequestBytes"
      | "buildSolanaAccountResponseBytes"
      | "buildSolanaPdaEntry"
      | "buildSolanaPdaRequestBytes"
      | "buildSolanaPdaResponseBytes"
      | "buildSolanaPdaSeedBytes"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "SOLANA_MAX_SEEDS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SOLANA_MAX_SEED_LEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallByTimestampRequestBytes",
    values: [BigNumberish, BytesLike, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallByTimestampResponseBytes",
    values: [
      BigNumberish,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallRecordBytes",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallRequestBytes",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallResponseBytes",
    values: [BigNumberish, BytesLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallResultBytes",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallWithFinalityRequestBytes",
    values: [BytesLike, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildEthCallWithFinalityResponseBytes",
    values: [BigNumberish, BytesLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildOffChainQueryRequestBytes",
    values: [BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildPerChainRequestBytes",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildPerChainResponseBytes",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildQueryResponseBytes",
    values: [
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaAccountRequestBytes",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaAccountResponseBytes",
    values: [BigNumberish, BigNumberish, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaPdaEntry",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaPdaRequestBytes",
    values: [BytesLike, BigNumberish, BigNumberish, BigNumberish, BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaPdaResponseBytes",
    values: [BigNumberish, BigNumberish, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buildSolanaPdaSeedBytes",
    values: [BytesLike[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "SOLANA_MAX_SEEDS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SOLANA_MAX_SEED_LEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallByTimestampRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallByTimestampResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallRecordBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallResultBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallWithFinalityRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildEthCallWithFinalityResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildOffChainQueryRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildPerChainRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildPerChainResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildQueryResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaAccountRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaAccountResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaPdaEntry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaPdaRequestBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaPdaResponseBytes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildSolanaPdaSeedBytes",
    data: BytesLike
  ): Result;
}

export interface QueryRequestBuilder extends BaseContract {
  connect(runner?: ContractRunner | null): QueryRequestBuilder;
  waitForDeployment(): Promise<this>;

  interface: QueryRequestBuilderInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  SOLANA_MAX_SEEDS: TypedContractMethod<[], [bigint], "view">;

  SOLANA_MAX_SEED_LEN: TypedContractMethod<[], [bigint], "view">;

  buildEthCallByTimestampRequestBytes: TypedContractMethod<
    [
      targetTimeUs: BigNumberish,
      targetBlockHint: BytesLike,
      followingBlockHint: BytesLike,
      numCallData: BigNumberish,
      callData: BytesLike
    ],
    [string],
    "view"
  >;

  buildEthCallByTimestampResponseBytes: TypedContractMethod<
    [
      targetBlockNumber: BigNumberish,
      targetBlockHash: BytesLike,
      targetBlockTimeUs: BigNumberish,
      followingBlockNumber: BigNumberish,
      followingBlockHash: BytesLike,
      followingBlockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;

  buildEthCallRecordBytes: TypedContractMethod<
    [contractAddress: AddressLike, callData: BytesLike],
    [string],
    "view"
  >;

  buildEthCallRequestBytes: TypedContractMethod<
    [blockId: BytesLike, numCallData: BigNumberish, callData: BytesLike],
    [string],
    "view"
  >;

  buildEthCallResponseBytes: TypedContractMethod<
    [
      blockNumber: BigNumberish,
      blockHash: BytesLike,
      blockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;

  buildEthCallResultBytes: TypedContractMethod<
    [result: BytesLike],
    [string],
    "view"
  >;

  buildEthCallWithFinalityRequestBytes: TypedContractMethod<
    [
      blockId: BytesLike,
      finality: BytesLike,
      numCallData: BigNumberish,
      callData: BytesLike
    ],
    [string],
    "view"
  >;

  buildEthCallWithFinalityResponseBytes: TypedContractMethod<
    [
      blockNumber: BigNumberish,
      blockHash: BytesLike,
      blockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;

  buildOffChainQueryRequestBytes: TypedContractMethod<
    [
      version: BigNumberish,
      nonce: BigNumberish,
      numPerChainQueries: BigNumberish,
      perChainQueries: BytesLike
    ],
    [string],
    "view"
  >;

  buildPerChainRequestBytes: TypedContractMethod<
    [chainId: BigNumberish, queryType: BigNumberish, queryBytes: BytesLike],
    [string],
    "view"
  >;

  buildPerChainResponseBytes: TypedContractMethod<
    [chainId: BigNumberish, queryType: BigNumberish, responseBytes: BytesLike],
    [string],
    "view"
  >;

  buildQueryResponseBytes: TypedContractMethod<
    [
      version: BigNumberish,
      senderChainId: BigNumberish,
      signature: BytesLike,
      queryRequest: BytesLike,
      numPerChainResponses: BigNumberish,
      perChainResponses: BytesLike
    ],
    [string],
    "view"
  >;

  buildSolanaAccountRequestBytes: TypedContractMethod<
    [
      commitment: BytesLike,
      minContextSlot: BigNumberish,
      dataSliceOffset: BigNumberish,
      dataSliceLength: BigNumberish,
      numAccounts: BigNumberish,
      accounts: BytesLike
    ],
    [string],
    "view"
  >;

  buildSolanaAccountResponseBytes: TypedContractMethod<
    [
      slotNumber: BigNumberish,
      blockTimeUs: BigNumberish,
      blockHash: BytesLike,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;

  buildSolanaPdaEntry: TypedContractMethod<
    [programId: BytesLike, numSeeds: BigNumberish, seeds: BytesLike],
    [string],
    "view"
  >;

  buildSolanaPdaRequestBytes: TypedContractMethod<
    [
      commitment: BytesLike,
      minContextSlot: BigNumberish,
      dataSliceOffset: BigNumberish,
      dataSliceLength: BigNumberish,
      pdas: BytesLike[]
    ],
    [string],
    "view"
  >;

  buildSolanaPdaResponseBytes: TypedContractMethod<
    [
      slotNumber: BigNumberish,
      blockTimeUs: BigNumberish,
      blockHash: BytesLike,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;

  buildSolanaPdaSeedBytes: TypedContractMethod<
    [seeds: BytesLike[]],
    [[string, bigint]],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "SOLANA_MAX_SEEDS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SOLANA_MAX_SEED_LEN"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "buildEthCallByTimestampRequestBytes"
  ): TypedContractMethod<
    [
      targetTimeUs: BigNumberish,
      targetBlockHint: BytesLike,
      followingBlockHint: BytesLike,
      numCallData: BigNumberish,
      callData: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallByTimestampResponseBytes"
  ): TypedContractMethod<
    [
      targetBlockNumber: BigNumberish,
      targetBlockHash: BytesLike,
      targetBlockTimeUs: BigNumberish,
      followingBlockNumber: BigNumberish,
      followingBlockHash: BytesLike,
      followingBlockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallRecordBytes"
  ): TypedContractMethod<
    [contractAddress: AddressLike, callData: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallRequestBytes"
  ): TypedContractMethod<
    [blockId: BytesLike, numCallData: BigNumberish, callData: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallResponseBytes"
  ): TypedContractMethod<
    [
      blockNumber: BigNumberish,
      blockHash: BytesLike,
      blockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallResultBytes"
  ): TypedContractMethod<[result: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "buildEthCallWithFinalityRequestBytes"
  ): TypedContractMethod<
    [
      blockId: BytesLike,
      finality: BytesLike,
      numCallData: BigNumberish,
      callData: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildEthCallWithFinalityResponseBytes"
  ): TypedContractMethod<
    [
      blockNumber: BigNumberish,
      blockHash: BytesLike,
      blockTimeUs: BigNumberish,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildOffChainQueryRequestBytes"
  ): TypedContractMethod<
    [
      version: BigNumberish,
      nonce: BigNumberish,
      numPerChainQueries: BigNumberish,
      perChainQueries: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildPerChainRequestBytes"
  ): TypedContractMethod<
    [chainId: BigNumberish, queryType: BigNumberish, queryBytes: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildPerChainResponseBytes"
  ): TypedContractMethod<
    [chainId: BigNumberish, queryType: BigNumberish, responseBytes: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildQueryResponseBytes"
  ): TypedContractMethod<
    [
      version: BigNumberish,
      senderChainId: BigNumberish,
      signature: BytesLike,
      queryRequest: BytesLike,
      numPerChainResponses: BigNumberish,
      perChainResponses: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaAccountRequestBytes"
  ): TypedContractMethod<
    [
      commitment: BytesLike,
      minContextSlot: BigNumberish,
      dataSliceOffset: BigNumberish,
      dataSliceLength: BigNumberish,
      numAccounts: BigNumberish,
      accounts: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaAccountResponseBytes"
  ): TypedContractMethod<
    [
      slotNumber: BigNumberish,
      blockTimeUs: BigNumberish,
      blockHash: BytesLike,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaPdaEntry"
  ): TypedContractMethod<
    [programId: BytesLike, numSeeds: BigNumberish, seeds: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaPdaRequestBytes"
  ): TypedContractMethod<
    [
      commitment: BytesLike,
      minContextSlot: BigNumberish,
      dataSliceOffset: BigNumberish,
      dataSliceLength: BigNumberish,
      pdas: BytesLike[]
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaPdaResponseBytes"
  ): TypedContractMethod<
    [
      slotNumber: BigNumberish,
      blockTimeUs: BigNumberish,
      blockHash: BytesLike,
      numResults: BigNumberish,
      results: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "buildSolanaPdaSeedBytes"
  ): TypedContractMethod<[seeds: BytesLike[]], [[string, bigint]], "view">;

  filters: {};
}
