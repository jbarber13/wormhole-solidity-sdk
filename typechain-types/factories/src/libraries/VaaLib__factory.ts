/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { VaaLib, VaaLibInterface } from "../../../src/libraries/VaaLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "InvalidVersion",
    type: "error",
  },
] as const;

const _bytecode =
  "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a25e76bcc1782cb72fb2d0271f4650cd811d03b84923ad7f72a792cefec46f7664736f6c63430008180033";

type VaaLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaaLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaaLib__factory extends ContractFactory {
  constructor(...args: VaaLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaaLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaaLib__factory {
    return super.connect(runner) as VaaLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaaLibInterface {
    return new Interface(_abi) as VaaLibInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaaLib {
    return new Contract(address, _abi, runner) as unknown as VaaLib;
  }
}
