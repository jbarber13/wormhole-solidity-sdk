/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ProxyBase,
  ProxyBaseInterface,
} from "../../../src/proxy/ProxyBase";

const _abi = [
  {
    inputs: [],
    name: "InvalidData",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "checkedUpgrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ProxyBase__factory {
  static readonly abi = _abi;
  static createInterface(): ProxyBaseInterface {
    return new Interface(_abi) as ProxyBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ProxyBase {
    return new Contract(address, _abi, runner) as unknown as ProxyBase;
  }
}
